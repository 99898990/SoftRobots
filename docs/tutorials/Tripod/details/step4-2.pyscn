# -*- coding: utf-8 -*-
"""
Step 4: Adding the ActuatedArm prefab and connect it to the deformable object.
This prefab is defining the servomotor, the servo-arm and the constraint that attaches the end of the arm to the deformable object.
"""
from splib.numerics import sin, cos, to_radians, vec3, Quat
from splib.animation import animate
from splib.objectmodel import SofaPrefab, SofaObject, setTreeData
from stlib.physics.mixedmaterial import Rigidify
from fixingbox import FixingBox
from actuatedarm import ActuatedArm
from tripod import Tripod

from tutorial import *

def createScene(rootNode):
    scene = Scene(rootNode)
    
    tripod = Tripod(scene.Modelling)

    scene.Simulation.addChild(tripod.RigidifiedStructure)
    motors = scene.Simulation.createChild("Motors")
    motors.addChild(tripod.ActuatedArm0)
    motors.addChild(tripod.ActuatedArm1)
    motors.addChild(tripod.ActuatedArm2)

    def myAnimation(targets, factor):
        import math
        factor = math.cos(factor*2*math.pi)
        for arm in targets:
                arm.ServoMotor.angleIn = math.sin(factor*0.05)
                     
    
    animate(myAnimation, {"targets":[tripod.ActuatedArm0,
                                          tripod.ActuatedArm1,
                                          tripod.ActuatedArm2]}, duration=4)

    
    setTreeData(scene.Modelling, "Rigidified.*/dofs", 
                showObject = True, 
                showObjectScale = 5.0)

  
    
    

