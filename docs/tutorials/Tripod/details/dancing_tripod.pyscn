import Sofa
from stlib.scene import MainHeader, Node
from stlib.animation import AnimationManager, animate
from stlib.animation.easing import LinearRamp
from stlib.algorithms import get
from stlib.debug import DebugManager, drawLine, drawText, worldToScreenPoint
from math import sin,cos,pi
from tripod import Tripod, addSimulationPlan


def tripodAnimation1(motor1, motor2, motor3, factor):
    motor1.angle = LinearRamp(0, -3.14/2, cos(factor*pi))
    motor2.angle = LinearRamp(0, -3.14/2, sin(factor*pi*2))
    motor3.angle = LinearRamp(0, -3.14/2, factor)

def tripodAnimation2(motors, factor):
    drawLine([0,0,0],[10,0,0])
    for i in range(0,len(motors)):
        motor = motors[i]
        f1 = cos(LinearRamp(-3.14, 3.14, factor*float(i)*3.14/3))
        p = motor.position[0]
        pp = p[:3]
        pp[1] = f1
        motor.findData("position").value = pp + p[3:7]

def textAnimation(factor):
    drawText("Dancing Tripod", 20 , LinearRamp(-20,100, sin(factor)))
    drawText("Let's Party", 250 , LinearRamp(-20,100, sin(2*factor)))
    drawText("Have Fun", 400 , LinearRamp(-20,100, cos(3*factor)))

class MyController(Sofa.PythonScriptController):
    def __init__(self, node, tripod):
        self.tripod = tripod

    def onKeyPressed(self, c):
        print("KEY "+str(c))
        if c == "A":
            animate(tripodAnimation2, {"motors" : [get(self.tripod, "ActuatedArm0/MechanicalObject"),
                                                   get(self.tripod, "ActuatedArm1/MechanicalObject"),
                                                   get(self.tripod, "ActuatedArm2/MechanicalObject")]},
                                       duration=1.0, mode="pingpong")
            animate(textAnimation, {}, duration=0.3, mode="pingpong")
        elif c == "F":
            animate(tripodAnimation1, {"motor1" : get(self.tripod, "ActuatedArm0/ServoMotor/KinematicMotorController"),
                                       "motor2" : get(self.tripod, "ActuatedArm1/ServoMotor/KinematicMotorController"),
                                       "motor3" : get(self.tripod, "ActuatedArm2/ServoMotor/KinematicMotorController")},
                                       duration=1.0, mode="pingpong")
        elif c == "+":
            pass

        elif c == "-":
            pass

#Units: cm and kg
def createScene(rootNode):
    r = MainHeader(rootNode, plugins=["SoftRobots"])
    r.getObject("VisualStyle").displayFlags="showForceFields"

    modelNode = Node(rootNode, "Model")
    tripod = Tripod(modelNode)
    MyController(modelNode, tripod)

    simNode = Node(rootNode, "SimulationPlan")
    addSimulationPlan(simNode, tripod)

    return rootNode
